<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACO
        DgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/CQAD/wH0AfEB3QK2
        AQcB8AHzA/8OAAP/AfQB8AHvAewB6wJtAfgB7QEHAfIE/0gAAv8B9AHdAbABjgSwAY4CtgHvAQcB8wL/
        CgAC/wHzAQcB6gIQBA8CDgMPARMB7wHyA/9FAAH/AfQB3QGwBBYBkgOOArABjgG2AQkB8AH0Av8HAAH/
        AfMB7wEUAg8FEAIPAQ4EDwEQARIBBwH0Av9DAAH/AfMBvQa2ARYCtgGOAbYCjgG3AbAB8gHzA/8FAAH/
        AfEB6wERARABDwIQBBECEAUPAhAB9wHzAfQC/0IAAfQDtgG3A9gBtwO2AbAFtgG8AfQD/wQAAf8B8AET
        AUMBEQEQARECQwERA0MCEQMPAQ4BDwIQAe8C9AL/QQAB/wH0AbYJtwK2AbADtgGwAfAD/wUAAf8B6wND
        AREBFQESARMEFQJDARABEQMPARABEQEHBP9CAAH0Ad0CtwXYBLcBtgG3A7YB8gL/BgAB/wHrAhUCQwES
        AfgBbQITARQCFQFDAREBQwEQAg8BEAEVAbwE/0IAAfUBvAG3AdgC3gO9Ad4B2AO3AQcCtwHdAfQIAAH/
        Ae0CFQFDARQB6wFzAW4B6gISARMCFQNDAQ8BEAERARIB8QL/RAAB/wHxAdgC3gHwAQcBdAGTAe4B8ALY
        AbcBBwG3Ad0BBwH1CAAB/wHvARQCFQHqAe0CdAHtAW0CEgETAhUBQwEUARACEQH4AfNGAAH/AfQB3gK9
        Ae4BbwJMAXQB8ALeA9gBkgFtAfcB8wH/BgAB/wHxARQBFQEUAW0C7wF0AQcB6wISARMBFANDARUCQwHv
        Af9HAAH/AfMBvQHeAfABdANLAXQB8AK9Ad4BkgFEAQsBFQH3AfQGAAH/AfQB6wIUAW0BkgEcAXMBHAHt
        AW0BEgETARUBFAEVAUMCFAFtAfJIAAL/AfQBGgGTAW4BKQFLAUUBKQEHAvABbgFDAQsB6wHxAfQB/wcA
        Af8B8QHqARMBbQGSARwCcwHwAe0B6gMTAhQBEwESAbwB/0oAAf8BBwFFASkBKgEpAgEBHAEHARIBEQEi
        ARIB8QH/CgAB/wHyAewB6gHtARwBcwGTAZkBGgHrARMBFAEVARQBbQHsAfIB/0sAAfIBcwRFASkBAQEH
        AfQBRAIiAfgB9AwAAf8B9AEcAZMBdQGaAnQBmQEHARIBFAEVARIB8AL/SwAB/wHuBUsCRQEcAf8B7wEj
        ASIB7AH0DQAB/wEbAZoCdQGUAZkBdAGZAfcBFQHrAfROAAH0AXQBSwFMAXQBTAJLAkUBkgHzAUQBIwHr
        AfIMAAH/AfQBGgWUAZoBdQIHAf9PAAHzARwGTAFLAUUBEgHtAY0CIwEHAf8LAAH/AfMHlAGaAQcB/1AA
        AfMBbwZMAUsBRQFLAUQBjgFuASMBHAH/CwAB9gEaBpoClAEaAf9QAAHzAW8DdAFvAkwBKQJKASIBjgFu
        ASMBcwH/CwAB9AEaCJoBdAHzUAAB8wV0AW8BTAEpAiIBRAGSAY4BRAHvAf8LAAH0CpoBdAH/TwAB8wGO
        A3QBbwF0AUsCIwEiAUQB7QH3Ae0B8wwAAfQImgGZAZoBkwHxTwAB8gF0A3MBSwFKBCMBRAEHAfEB8wH/
        DAAB9AGaA70EmgFLAXQBSwGSTwAB8wHtAm4BSwFKBSMBbQH0DwAB9AEaAb0C8wK9ApoBSwIiAfhPAAH/
        AQcBSwFuAksBAQMjAUQB7wH/DwAB9AK9ARoC8wG9ApoBEgIiAetPAAH/AfMBcwFuA0sBAQIjAesB9BAA
        AfUBGgF0AUoBdAEaAfMBmgFzAUQCIgHtUAAB/wHzARwCSwFFAikB7QHzAf8QAAH0AZICIwFEAUoCbgQj
        ARxRAAH/AfUB8wHxARoB8QHzAfUB/xEAAfQB6wFEAUoIIwHzUwAF/xMAAfUB7wVLAWgCSwFKAe8B/2sA
        Av8B8QHtAksBAwFLAW4BdAHxAf9wAAL/AfQB9QL/TAABQgFNAT4HAAE+AwABKAMAAXgDAAEeAwABAQEA
        AQEFAAHgAQEWAAP/AQAB/wEAAQMB/wHwAQABAwHwCAAB/AIAAf8BwAIAAfAIAAH4AgABPwGAAgABcAgA
        AfACAAEfAwABMAgAAfACAAEeAwABMAgAAeACAAE+AwABMAgAAfACAAF+AwABMAgAAfABAAEBAf4DAAHw
        CAAB8AEAAQEB/gIAAQMB8AgAAfACAAF+AgABAwHwCAAB+AIAAX4CAAEHAfAIAAH4AgABfwIAAQcB8AgA
        Af4BAAEBAf8BgAEAAQ8B8AgAAf4BAAEDAf8BwAEAAR8B8AgAAfwBAAEDAf8B4AEAAf8B8AgAAfwBAAED
        Af8BwAEBAf8B8AgAAfwBAAEBAf8BwAEDAf8B8AgAAfwBAAEBAf8BwAEDAf8B8AgAAfwBAAEBAf8BwAED
        Af8B8AgAAfwBAAEBAf8BwAEBAf8B8AgAAfwBAAEDAf8BwAEBAf8B8AgAAfwBAAEDAf8BwAEBAf8B8AgA
        AfwBAAEfAf8BwAEBAf8B8AgAAfwBAAEfAf8BwAEBAf8B8AgAAfwBAAE/Af8BwAEBAf8B8AgAAf4BAAE/
        Af8BwAEBAf8B8AgAAf8BAAF/Af8BwAEBAf8B8AgAAf8BwQL/AcABAQH/AfAIAAT/AcABAwH/AfAIAAT/
        AfwBDwH/AfAIAAs=
</value>
  </data>
</root>